// Copyright 2021 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.terminal.v1;

option go_package = "github.com/gravitational/teleport/lib/teleterm/v1";

import "google/protobuf/empty.proto";
import "v1/cluster.proto";
import "v1/database.proto";
import "v1/gateway.proto";
import "v1/kube.proto";
import "v1/app.proto";
import "v1/server.proto";
import "v1/auth_settings.proto";

// TerminalService describes Teleterm service
service TerminalService {
    // ListRootClusters lists root clusters
    rpc ListRootClusters(ListClustersRequest) returns (ListClustersResponse);
    // ListLeafClusters lists leaf clusters
    rpc ListLeafClusters(ListLeafClustersRequest) returns (ListClustersResponse);
    // ListDatabases lists databases
    rpc ListDatabases(ListDatabasesRequest) returns (ListDatabasesResponse);
    // ListDatabaseUsers lists allowed users for the given database based on the role set.
    rpc ListDatabaseUsers(ListDatabaseUsersRequest) returns (ListDatabaseUsersResponse);
    // ListGateways lists gateways
    rpc ListGateways(ListGatewaysRequest) returns (ListGatewaysResponse);
    // ListServers lists servers
    rpc ListServers(ListServersRequest) returns (ListServersResponse);
    // ListKubes list kubes
    rpc ListKubes(ListKubesRequest) returns (ListKubesResponse);
    // ListApps list apps
    rpc ListApps(ListAppsRequest) returns (ListAppsResponse);
    // CreateGateway creates a gateway
    rpc CreateGateway(CreateGatewayRequest) returns (Gateway);
    // AddCluster adds a cluster to profile
    rpc AddCluster(AddClusterRequest) returns (Cluster);
    // RemoveCluster removes a cluster from profile
    rpc RemoveCluster(RemoveClusterRequest) returns (EmptyResponse);
    // RemoveGateway removes a gateway
    rpc RemoveGateway(RemoveGatewayRequest) returns (EmptyResponse);
    // GetAuthSettings returns cluster auth settigns
    rpc GetAuthSettings(GetAuthSettingsRequest) returns (AuthSettings);
    // GetCluster returns a cluster
    rpc GetCluster(GetClusterRequest) returns (Cluster);
    // Login logs in a user to a cluster
    rpc Login(LoginRequest) returns (EmptyResponse);
    // ClusterLogin logs out a user from cluster
    rpc Logout(LogoutRequest) returns (EmptyResponse);
}

// RemoveClusterRequest describes RemoveClusterRequest
message RemoveClusterRequest { string cluster_uri = 1; }

// GetClusterRequest describes GetClusterRequest
message GetClusterRequest { string cluster_uri = 1; }

// LogoutRequest describes LogoutRequest
message LogoutRequest { string cluster_uri = 1; }

// LoginRequest describes cluster login request
message LoginRequest {
    // cluster_uri is the cluster uri
    string cluster_uri = 1;

    oneof params {
        // local holds parameters for local logins
        LocalParams local = 2;
        // sso holds parameters for sso logins
        SsoParams sso = 3;
    }

    // LocalParams describes parameters for local user logins
    message LocalParams {
        // user is the user name
        string user = 1;
        // password is the user password
        string password = 2;
        // token is the 2FA token
        string token = 3;
    }

    // SsoParams describes SSO parameters
    message SsoParams {
        // provider_type is the provider type
        string provider_type = 1;
        // provider_name is the provider name
        string provider_name = 2;
    }
}

message AddClusterRequest { string name = 1; }

message ListKubesRequest { string cluster_uri = 1; }

message ListAppsRequest { string cluster_uri = 1; }

message ListClustersRequest {}

message ListClustersResponse { repeated Cluster clusters = 1; }

message ListDatabasesRequest { string cluster_uri = 1; }

message ListLeafClustersRequest { string cluster_uri = 1; }

message ListDatabasesResponse { repeated Database databases = 1; }

message ListDatabaseUsersRequest { string db_uri = 1; }

message ListDatabaseUsersResponse { repeated string users = 1; }

message CreateGatewayRequest {
    string target_uri = 1;
    string target_user = 2;
    string local_port = 3;
    string target_subresource_name = 4;
}

message ListGatewaysRequest { repeated string cluster_ids = 1; }

message ListGatewaysResponse { repeated Gateway gateways = 1; }

message RemoveGatewayRequest { string gateway_uri = 1; }

message ListServersRequest { string cluster_uri = 1; }

message ListServersResponse { repeated Server servers = 1; }

message ListKubesResponse { repeated Kube kubes = 1; }

message ListAppsResponse { repeated App apps = 1; }

message GetAuthSettingsRequest { string cluster_uri = 1; }

message EmptyResponse {}
